<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EnhancedTextApp">
  
  <!--<Style x:Key="SuggestionEnab" BasedOn="{DynamicResource DefaultTextBoxStyle}" TargetType="{x:Type TextBoxBase}" />-->

  <!--<ControlTemplate x:Key="SmartTextBoxControlTemplate" TargetType="{x:Type TextBox}">
    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
      <Border
          x:Name="ContentBorder"
          MinWidth="{TemplateBinding MinWidth}"
          MinHeight="{TemplateBinding MinHeight}"
          Padding="0"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          CornerRadius="{TemplateBinding Border.CornerRadius}">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>

          <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
            <ScrollViewer
                            x:Name="PART_ContentHost"
                            VerticalAlignment="Center"
                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                            Style="{StaticResource DefaultTextBoxScrollViewerStyle}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
          </Grid>

          --><!--  Buttons and Icons have no padding from the main element to allow absolute positions if height is larger than the text entry zone  --><!--
          <ToggleButton
                        x:Name="SuggestionsButton"
                        Grid.Column="1"
                        MinWidth="{StaticResource TextBoxClearButtonHeight}"
                        MinHeight="{StaticResource TextBoxClearButtonHeight}"
                        Margin="{StaticResource TextBoxClearButtonMargin}"
                        Padding="{StaticResource TextBoxClearButtonPadding}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Cursor="Arrow"
                        IsTabStop ="False"
                        Foreground="{DynamicResource TextControlButtonForeground}" >
            <ToggleButton.Content>
              <TextBlock
                                FontSize="{TemplateBinding FontSize}"
                                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                >&#xE70F;</TextBlock>
            </ToggleButton.Content>
          </ToggleButton>
        </Grid>
      </Border>
      --><!--  The Accent Border is a separate element so that changes to the border thickness do not affect the position of the element  --><!--
      <Border
                x:Name="AccentBorder"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                BorderBrush="{DynamicResource ControlStrokeColorDefaultBrush}"
                BorderThickness="{StaticResource TextBoxAccentBorderThemeThickness}"
                CornerRadius="{TemplateBinding Border.CornerRadius}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="local:TextSuggestionHelper.TextSuggestionsEnabled" Value="True">
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="SuggestionsButton" Property="Margin" Value="0" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter TargetName="AccentBorder" Property="BorderThickness" Value="0,0,0,2" />
        <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{DynamicResource TextControlFocusedBorderBrush}" />
        <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource TextControlBackgroundFocused}" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="False">
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Visible" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsEnabled" Value="True" />
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsFocused" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}" />
      </MultiTrigger>
      <Trigger Property="IsReadOnly" Value="True">
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="SuggestionsButton" Property="Margin" Value="0" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="True">
        <Setter Property="Cursor" Value="IBeam" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}" />
        <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushDisabled}" />
        <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushDisabled}" />
        <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}" />
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="SuggestionsButton" Property="Margin" Value="0" />

      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="SmartRichTextBoxControlTemplate" TargetType="{x:Type RichTextBox}">
    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
      <Border
          x:Name="ContentBorder"
          MinWidth="{TemplateBinding MinWidth}"
          MinHeight="{TemplateBinding MinHeight}"
          Padding="0"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          CornerRadius="{TemplateBinding Border.CornerRadius}">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>

          <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
            <ScrollViewer
                            x:Name="PART_ContentHost"
                            VerticalAlignment="Center"
                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                            Style="{StaticResource DefaultTextBoxScrollViewerStyle}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
          </Grid>

          --><!--  Buttons and Icons have no padding from the main element to allow absolute positions if height is larger than the text entry zone  --><!--
          <ToggleButton
                        x:Name="SuggestionsButton"
                        Grid.Column="1"
                        MinWidth="{StaticResource TextBoxClearButtonHeight}"
                        MinHeight="{StaticResource TextBoxClearButtonHeight}"
                        Margin="{StaticResource TextBoxClearButtonMargin}"
                        Padding="{StaticResource TextBoxClearButtonPadding}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        IsChecked="True"
                        IsEnabled="True"
                        IsHitTestVisible="True"
                        Cursor="Arrow"
                        IsTabStop ="False"
                        Command="{x:Static local:TextSuggestionCommands.ShowDialog}"
                        Style="{StaticResource DefaultToggleButtonStyle}"
                        Foreground="{DynamicResource TextControlButtonForeground}" >
            <ToggleButton.Content>
              <TextBlock
                                FontSize="{TemplateBinding FontSize}"
                                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                >&#xE70F;</TextBlock>
            </ToggleButton.Content>
          </ToggleButton>
        </Grid>
      </Border>
      --><!--  The Accent Border is a separate element so that changes to the border thickness do not affect the position of the element  --><!--
      <Border
                x:Name="AccentBorder"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                BorderBrush="{DynamicResource ControlStrokeColorDefaultBrush}"
                BorderThickness="{StaticResource TextBoxAccentBorderThemeThickness}"
                CornerRadius="{TemplateBinding Border.CornerRadius}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="local:TextSuggestionHelper.TextSuggestionsEnabled" Value="False">
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="SuggestionsButton" Property="Margin" Value="0" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter TargetName="AccentBorder" Property="BorderThickness" Value="0,0,0,2" />
        <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{DynamicResource TextControlFocusedBorderBrush}" />
        <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource TextControlBackgroundFocused}" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="False">
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Visible" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsEnabled" Value="True" />
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsFocused" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}" />
      </MultiTrigger>
      <Trigger Property="IsReadOnly" Value="True">
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="SuggestionsButton" Property="Margin" Value="0" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="True">
        <Setter Property="Cursor" Value="IBeam" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}" />
        <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushDisabled}" />
        <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushDisabled}" />
        <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}" />
        <Setter TargetName="SuggestionsButton" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="SuggestionsButton" Property="Margin" Value="0" />

      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="SmartTextBoxStyle" BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="{x:Type TextBox}">
    <Setter Property="Border.CornerRadius" Value="4" />
    <Style.Triggers>
      <Trigger Property="local:TextSuggestionHelper.TextSuggestionsEnabled" Value="True">
        <Setter Property="Template" Value="{StaticResource SmartTextBoxControlTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="SmartRichTextBoxStyle" BasedOn="{StaticResource DefaultRichTextBoxStyle}" TargetType="{x:Type RichTextBox}">
    <Setter Property="Border.CornerRadius" Value="4" />
    <Style.Triggers>
      <Trigger Property="local:TextSuggestionHelper.TextSuggestionsEnabled" Value="True">
        <Setter Property="Template" Value="{StaticResource SmartRichTextBoxControlTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style BasedOn="{StaticResource SmartTextBoxStyle}" TargetType="{x:Type TextBox}" />
  <Style BasedOn="{StaticResource SmartRichTextBoxStyle}" TargetType="{x:Type RichTextBox}" />-->

  <Style x:Key="SmartRichTextBoxStyle" BasedOn="{StaticResource DefaultRichTextBoxStyle}" TargetType="RichTextBox">
    <Style.Triggers>
      <Trigger Property="local:TextSuggestionHelper.TextSuggestionsEnabled" Value="True">
        <Setter Property="ContextMenu">
          <Setter.Value>
            <ContextMenu>
              <MenuItem Command="ApplicationCommands.Copy" />
              <MenuItem Command="ApplicationCommands.Cut" />
              <MenuItem Command="ApplicationCommands.Paste" />
              <!--<MenuItem Command="local:TextSuggestionCommands.ShowDialog" />-->
              <Separator />
              <MenuItem Command="local:TextSuggestionCommands.CustomRewrite">
                <MenuItem.Header>
                  <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock FontFamily="Segoe Fluent Icons" Margin="0,0,8,0">&#xE70F;</TextBlock>
                    <TextBlock Text="Rewrite" />
                  </StackPanel>
                </MenuItem.Header>
              </MenuItem>
                <Grid HorizontalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <MenuItem Command="local:TextSuggestionCommands.FriendlyRewrite" HorizontalContentAlignment="Center">
                    <MenuItem.Header>
                      <TextBlock FontFamily="Segoe Fluent Icons">&#xE899;</TextBlock>
                    </MenuItem.Header>
                  </MenuItem>
                  <MenuItem Grid.Column="1" Command="local:TextSuggestionCommands.ProfessionalRewrite" HorizontalContentAlignment="Center">
                    <MenuItem.Header>
                      <TextBlock FontFamily="Segoe Fluent Icons">&#xE9F9;</TextBlock>
                    </MenuItem.Header>
                  </MenuItem>
                </Grid>
            </ContextMenu>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style BasedOn="{StaticResource SmartRichTextBoxStyle}" TargetType="RichTextBox" />

</ResourceDictionary>